[package]
name = "kuiba"
version = "0.0.1"
authors = ["盏一 <w@hidva.com>"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
yaml-rust = "0.4"
clap = "2"
anyhow = "1"
lalrpop-util = "0.19"
kbio = {git="https://github.com/KuiBaDB/kbio.git"}
tokio = {version = "1", features=["rt-multi-thread", "rt", "io-util"]}
tracing = "0.1"
tracing-appender = "0.1"
tracing-subscriber = "0.2"
tracing-log = "0.1"
parking_lot = "0.11"
log = "0.4"
lazy_static = "1"

[build-dependencies]
yaml-rust = "0.4"
quote = "1"
proc-macro2 = "1"
anyhow = "1"

[build-dependencies.lalrpop]
version = "0.19"
features = ["lexer"]

[profile.release]
# We `wreq.write()` in handle_insert_ret() return an error,
# it means that `self.file.write.done()` will never be called,
# which means that `wal::GlobalStateExt::write` will never be updated,
# which means that subsequent calls of `wal::insert_record()` will block forever.
# So we should abort the whole process when `wreq.write()` fails.
# PG uses `elog(PANIC)` to achieve it, and we use abort-on-panic.
panic = 'abort'
